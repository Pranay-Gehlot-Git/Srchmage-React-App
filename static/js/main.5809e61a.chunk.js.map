{"version":3,"sources":["components/Dialogbox.js","components/NavBar.jsx","components/Breadcrumb.jsx","services/api.js","components/Image.jsx","components/Images.jsx","components/SnackBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Transition","React","props","ref","Slide","direction","Dialogbox","open","setOpen","handleClose","Button","variant","color","onClick","Dialog","fullScreen","onClose","TransitionComponent","sx","position","IconButton","edge","style","marginLeft","useStyles","makeStyles","component","background","NavBar","classes","AppBar","className","Toolbar","Typography","theme","margin","spacing","BreadCrumb","onTextChange","onCountChange","Box","m","TextField","onChange","e","target","value","label","type","getImages","text","count","axios","get","error","console","log","image","height","width","objectFit","Image","Card","src","largeImageURL","alt","user","Images","data","Grid","container","map","xs","item","id","snack","backgroundColor","SnackBar","toggleSnack","event","reason","Snackbar","autoHideDuration","severity","App","useState","setData","setText","setCount","useEffect","getData","a","then","response","hits","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gYAcMA,EAAaC,cAAiB,SAAoBC,EAAOC,GAC7D,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAASD,OA+C9BI,EA1CG,WAChB,MAAwBL,YAAe,GAAvC,mBAAOM,EAAP,KAAaC,EAAb,KAKMC,EAAc,WAClBD,GAAQ,IAGV,OACE,gCACE,cAACE,EAAA,EAAD,CAAQC,QAAQ,OAAOC,MAAO,UAAUC,QAVpB,WACtBL,GAAQ,IASN,SACE,cAAC,IAAD,CAAYG,QAAQ,KAApB,wBAEF,eAACG,EAAA,EAAD,CACEC,YAAU,EACVR,KAAMA,EACNS,QAASP,EACTQ,oBAAqBjB,EAJvB,UAME,cAAC,IAAD,CAAQkB,GAAI,CAAEC,SAAU,YAAxB,SACE,eAAC,IAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLT,MAAM,UACNC,QAASJ,EACT,aAAW,QAJb,SAME,cAAC,IAAD,MAEF,cAAC,IAAD,CAAYE,QAAQ,KAAKW,MAAO,CAACC,WAAY,KAA7C,6BAGJ,gCACA,qCAAa,qCAAa,glBAAsjB,0RAAgQ,kUCnDl1BC,EAAYC,YAAW,CACzBC,UAAW,CACPC,WAAY,aAqBLC,EAfA,WACX,IAAMC,EAAUL,IAChB,OACI,cAACM,EAAA,EAAD,CAAQC,UAAWF,EAAQH,UAAWP,SAAS,SAA/C,SACI,eAACa,EAAA,EAAD,WACI,cAAC,IAAD,IACA,eAACC,EAAA,EAAD,CAAYtB,QAAQ,KAAKW,MAAO,CAACC,WAAY,IAA7C,cAAmD,qCAAnD,cACC,qBAAKD,MAAO,CAACC,WAAY,KAAzB,SACA,cAAC,EAAD,Y,kBClBXC,EAAYC,aAAW,SAAAS,GAAK,MAAK,CACnCR,UAAW,CACPC,WAAY,UACZ,QAAS,CACLQ,OAAQD,EAAME,QAAQ,SAsBnBC,EAjBI,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,cACzBV,EAAUL,IAChB,OACI,eAACgB,EAAA,EAAD,CAAKC,EAAG,EAAGV,UAAWF,EAAQH,UAA9B,UACI,cAACgB,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAON,EAAaM,EAAEC,OAAOC,QACvCC,MAAM,kBAEV,cAACL,EAAA,EAAD,CACIC,SAAU,SAACC,GAAD,OAAOL,EAAcK,EAAEC,OAAOC,QACxCC,MAAM,mBACNC,KAAK,e,kBChBRC,EAAY,SAACC,EAAMC,GAC5B,IAEI,OADaC,IAAMC,IAAN,UAJT,2BAIS,iBALL,qCAKK,cAAsCH,EAAtC,sCAAwEC,EAAxE,qBAEhB,MAAMG,GAEHC,QAAQC,IAAIF,K,SCVd9B,EAAYC,YAAW,CACzBgC,MAAO,CACHC,OAAQ,IACRC,MAAO,OACPC,UAAW,WAaJC,EATD,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MACP5B,EAAUL,IAChB,OACI,cAACsC,EAAA,EAAD,UACI,qBAAK/B,UAAWF,EAAQ4B,MAAOM,IAAKN,EAAMO,cAAeC,IAAKR,EAAMS,U,SCGjEC,EAdA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAEb,OADAb,QAAQC,IAAI,OAAQY,GAEhB,cAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,SAEAF,EAAKG,KAAI,SAAAd,GAAK,OACV,cAACY,EAAA,EAAD,CAAqBG,GAAI,EAAGC,MAAI,EAAhC,SAAiC,cAAC,EAAD,CAAOhB,MAAOA,KAApCA,EAAMiB,U,kBCLvBlD,EAAYC,YAAW,CACzBkD,MAAO,CACH,QAAS,CACL/D,MAAO,OACPgE,gBAAiB,cA2BdC,EAtBE,SAAC,GAA2B,IAAzBtE,EAAwB,EAAxBA,KAAMuE,EAAkB,EAAlBA,YAChBjD,EAAUL,IAEVf,EAAc,SAACsE,EAAOC,GACX,cAAXA,GAIJF,GAAY,IAGd,OACI,cAACtC,EAAA,EAAD,UACI,cAACyC,EAAA,EAAD,CAAUlD,UAAWF,EAAQ8C,MAAOpE,KAAMA,EAAM2E,iBAAkB,IAAMlE,QAASP,EAAjF,SACI,cAAC,IAAD,CAAU0E,SAAS,OAAOnE,QAASP,EAAnC,+DCwBD2E,MAvCf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOjB,EAAP,KAAakB,EAAb,KACA,EAAwBD,mBAAS,QAAjC,mBAAOnC,EAAP,KAAaqC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOlC,EAAP,KAAcqC,EAAd,KACA,EAA4BH,oBAAS,GAArC,mBAAO9E,EAAP,KAAauE,EAAb,KAyBA,OAvBAW,qBAAU,WACR,GAAGtC,EAAQ,GAAKA,EAAQ,IACtB2B,GAAY,OADd,CAIAA,GAAY,GAEZ,IAAMY,EAAO,uCAAG,sBAAAC,EAAA,sEACR1C,EAAUC,EAAMC,GAAOyC,MAAK,SAAAC,GAChCP,EAAQO,EAASzB,KAAK0B,SAFV,2CAAH,qDAKbJ,OACC,CAACxC,EAAMC,IAWR,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAYO,aAXK,SAACY,GACpBqC,EAAQrC,IAUkCX,cAPtB,SAACY,GACrBqC,EAASrC,MAOP,cAAC,EAAD,CAAQiB,KAAMA,IACd,cAAC,EAAD,CAAU7D,KAAMA,EAAMuE,YAAaA,QClC1BiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACH,cAAC,EAAD,IAEJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.5809e61a.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\n//import { createTheme } from '@mui/material/styles';\r\n//import ListItemText from '@mui/material/ListItemText';\r\n//import ListItem from '@mui/material/ListItem';\r\n//import List from '@mui/material/List';\r\n//import Divider from '@mui/material/Divider';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Slide from '@mui/material/Slide';\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\nconst  Dialogbox= () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <Button variant=\"text\" color= 'inherit' onClick={handleClickOpen}>\r\n        <Typography variant=\"h6\">About Us</Typography>\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar sx={{ position: 'relative' }}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h5\" style={{marginLeft: 550}}> About Us </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div>\r\n        <p>&nbsp;</p><p>&nbsp;</p><p>This project is all about searching images for personal works this project is all about saving our self from the cookies that fetch by the other website and start showing you similar content as Ads. The technology is used in this project is React Js and Material UI and Development will be done in Visual Code IDE and we are using the Pixabay API for images. You can see any website to download the images as a reference. Our website contains only two tabs one is to search the images and the other one is to set the limits of images that are shown by search.</p><p>The problem is common but people do not know that how much they spend the data from their interest and get targeted by the websites through Ads by accepting the cookies. So, here we create a website which does not fetch cookies and responds quickly.</p><p>We are creating a website that does not contain Ads and Cookies to help people to search images freely in good quality. The technology is used in this project is React Js and Material UI and Development will be done in Visual Code IDE and we are using the Pixabay API for images.</p>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dialogbox;","import { AppBar, Toolbar, Typography, makeStyles, } from '@material-ui/core';\r\nimport CollectionsIcon from '@material-ui/icons/Collections';\r\nimport Dialogbox from './Dialogbox';\r\n\r\nconst useStyles = makeStyles({\r\n    component: {\r\n        background: '#0cbaba'\r\n    }\r\n})\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar className={classes.component} position=\"sticky\">\r\n            <Toolbar>\r\n                <CollectionsIcon />\r\n                <Typography variant=\"h5\" style={{marginLeft: 10}}> <span>S</span>rchmage </Typography>\r\n                 <div style={{marginLeft: 1000}}>\r\n                 <Dialogbox/> \r\n                 </div>              \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default NavBar;","import { Box, TextField, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    component: {\r\n        background: '#F6F6F6',\r\n        '& > *': {\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nconst BreadCrumb = ({onTextChange, onCountChange}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box m={1} className={classes.component} > \r\n            <TextField \r\n                onChange={(e) => onTextChange(e.target.value)}\r\n                label=\"Search images\" \r\n            />\r\n            <TextField \r\n                onChange={(e) => onCountChange(e.target.value)}\r\n                label=\"Number of images\" \r\n                type=\"number\"\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BreadCrumb;","import axios from 'axios';\r\n\r\n\r\nconst API_KEY = '24151858-bb3211946b7cf69a55f16c96a';\r\nconst URL = 'https://pixabay.com/api/';\r\n\r\nexport const getImages = (text, count) => {\r\n    try{\r\n        const data = axios.get(`${URL}/?key=${API_KEY}&q=${text}&image_type=photo&per_page=${count}&safesearch=true`)\r\n        return data;\r\n    }catch(error)\r\n    {\r\n        console.log(error);\r\n    }\r\n\r\n    }\r\n","import { Card, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    image: {\r\n        height: 300,\r\n        width: '100%',\r\n        objectFit: 'cover'\r\n    }\r\n})\r\n\r\nconst Image = ({ image }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card>\r\n            <img className={classes.image} src={image.largeImageURL} alt={image.user} />\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Image;","import Image from './Image';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Images = ({data}) => {\r\n    console.log('data', data);\r\n    return(\r\n        <Grid container> \r\n        {\r\n        data.map(image => (\r\n            <Grid key={image.id} xs={3} item><Image image={image}/></Grid>\r\n        ))\r\n        \r\n        }\r\n\r\n        </Grid> \r\n    )\r\n}\r\nexport default Images;","//import { useState } from 'react'; \r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { Box, Snackbar, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    snack: {\r\n        '& > *': {\r\n            color: '#fff',\r\n            backgroundColor: '#000000'\r\n        }\r\n    }\r\n})\r\n\r\nconst SnackBar = ({ open, toggleSnack }) => {\r\n    const classes = useStyles();\r\n    \r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n  \r\n      toggleSnack(false);\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Snackbar className={classes.snack} open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                <MuiAlert severity=\"info\" onClose={handleClose}>\r\n                    Number of Images should be between 3 and 200\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SnackBar;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar.jsx';\nimport BreadCrumb from './components/Breadcrumb';\nimport { getImages } from './services/api';\nimport Images from './components/Images';\nimport SnackBar from './components/SnackBar';\n\n\n//import { Switch } from '@material-ui/core';\n\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [text, setText] = useState('cars');\n  const [count, setCount] = useState(10);\n  const [open, toggleSnack] = useState(false);\n\n  useEffect(() => {\n    if(count < 3 || count > 200){\n      toggleSnack(true);\n      return;\n    }\n    toggleSnack(false);\n\n    const getData = async () => {\n      await getImages(text, count).then(response => {\n        setData(response.data.hits);\n      }); \n    }\n    getData();\n  }, [text, count])\n  \n  const onTextChange = (text) => {\n    setText(text);\n  }\n\n  const onCountChange = (count) => {\n    setCount(count);\n  }\n\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <BreadCrumb onTextChange={onTextChange} onCountChange={onCountChange}/>\n      <Images data={data}/>\n      <SnackBar open={open} toggleSnack={toggleSnack} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n      <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}